theme(plot.title = element_text(hjust = 0.5),
strip.text = element_text(face = "bold",size=15),
axis.text.y = element_text(size = 15,face = "bold"),
axis.title.y = element_text(size = 15,face = "bold"),
axis.text.x = element_text(size = 15,face = "bold"),
axis.title.x = element_text(size = 15,face = "bold"))
appendix_p1
pollution_temp_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgTemp")
quantile(apply(pollution_temp_coef[5:8,],2,sum), p = c(0.025,0.5,0.975))
pollution_humid_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgHumidity")
quantile(apply(pollution_humid_coef[5:8,],2,sum), p = c(0.025,0.5,0.975))
pollution_wind_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgWindSpeed")
quantile(apply(pollution_wind_coef[5:8,],2,sum), p = c(0.025,0.5,0.975))
pollution_pressure_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgPressure")
pollution_fire_scale_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"fireScale")
quality_temp_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgTemp")
quality_humid_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgHumidity")
quality_wind_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgWindSpeed")
quality_pressure_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgPressure")
quality_fire_scale_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"fireScale")
quality_socio_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME1_mean", time_dependent = F)
quality_house_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME2_mean", time_dependent = F)
quality_race_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME3_mean", time_dependent = F)
quality_trans_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME4_mean", time_dependent = F)
filter_temp_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgTemp")
filter_humid_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgHumidity")
filter_wind_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgWindSpeed")
filter_pressure_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgPressure")
filter_fire_scale_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"fireScale")
filter_socio_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME1_mean", time_dependent = F)
filter_house_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME2_mean", time_dependent = F)
filter_race_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME3_mean", time_dependent = F)
filter_trans_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME4_mean", time_dependent = F)
temp_df = create_data_for_ci("AvgTemp", spatio_tempo_data)
humid_df = create_data_for_ci("AvgHumidity", spatio_tempo_data)
wind_df = create_data_for_ci("AvgWindSpeed", spatio_tempo_data)
pressure_df = create_data_for_ci("AvgPressure", spatio_tempo_data)
fire_scale_df = create_data_for_ci("incident_acres_burned", spatio_tempo_data,
lb = 0.9, ub = 0.99)
socio_df = create_data_for_ci("RPL_THEME1_mean", spatio_tempo_data)
house_df = create_data_for_ci("RPL_THEME2_mean", spatio_tempo_data)
race_df = create_data_for_ci("RPL_THEME3_mean", spatio_tempo_data)
trans_df = create_data_for_ci("RPL_THEME4_mean", spatio_tempo_data)
pollution_temp_rrsi = calculate_rrsi(temp_df,pollution_temp_coef,"Temperature (°F)")
pollution_humid_rrsi = calculate_rrsi(humid_df,pollution_humid_coef,"Humidity (%)")
pollution_wind_rrsi = calculate_rrsi(wind_df,pollution_wind_coef,"Wind Speed (mph)")
pollution_pressure_rrsi = calculate_rrsi(pressure_df,pollution_pressure_coef,
"Atmospheric Pressure (inHg)")
pollution_fire_scale_rrsi = calculate_rrsi(fire_scale_df,pollution_fire_scale_coef,
"Fire Scale (acres)")
pollution_socio_rrsi = calculate_rrsi(socio_df,pollution_socio_coef,
"Socioeconomic Status")
pollution_house_rrsi = calculate_rrsi(house_df,pollution_house_coef,
"Household Characteristics")
pollution_temp_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgTemp")
pollution_humid_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgHumidity")
pollution_wind_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgWindSpeed")
pollution_pressure_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"AvgPressure")
pollution_fire_scale_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"fireScale")
pollution_socio_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"RPL_THEME1_mean", time_dependent = F)
pollution_house_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"RPL_THEME2_mean", time_dependent = F)
pollution_race_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"RPL_THEME3_mean", time_dependent = F)
pollution_trans_coef = create_coef_for_ci(sample_lst,"air_pollution_smokePM",
"RPL_THEME4_mean", time_dependent = F)
temp_df = create_data_for_ci("AvgTemp", spatio_tempo_data)
humid_df = create_data_for_ci("AvgHumidity", spatio_tempo_data)
wind_df = create_data_for_ci("AvgWindSpeed", spatio_tempo_data)
pressure_df = create_data_for_ci("AvgPressure", spatio_tempo_data)
fire_scale_df = create_data_for_ci("incident_acres_burned", spatio_tempo_data,
lb = 0.9, ub = 0.99)
socio_df = create_data_for_ci("RPL_THEME1_mean", spatio_tempo_data)
house_df = create_data_for_ci("RPL_THEME2_mean", spatio_tempo_data)
race_df = create_data_for_ci("RPL_THEME3_mean", spatio_tempo_data)
trans_df = create_data_for_ci("RPL_THEME4_mean", spatio_tempo_data)
pollution_temp_rrsi = calculate_rrsi(temp_df,pollution_temp_coef,"Temperature (°F)")
pollution_humid_rrsi = calculate_rrsi(humid_df,pollution_humid_coef,"Humidity (%)")
pollution_wind_rrsi = calculate_rrsi(wind_df,pollution_wind_coef,"Wind Speed (mph)")
pollution_pressure_rrsi = calculate_rrsi(pressure_df,pollution_pressure_coef,
"Atmospheric Pressure (inHg)")
pollution_fire_scale_rrsi = calculate_rrsi(fire_scale_df,pollution_fire_scale_coef,
"Fire Scale (acres)")
pollution_socio_rrsi = calculate_rrsi(socio_df,pollution_socio_coef,
"Socioeconomic Status")
pollution_house_rrsi = calculate_rrsi(house_df,pollution_house_coef,
"Household Characteristics")
pollution_race_rrsi = calculate_rrsi(race_df,pollution_race_coef,
"Racial & Ethnic Minority Status")
pollution_trans_rrsi = calculate_rrsi(trans_df,pollution_trans_coef,
"Housing Type & Transportation")
purifier_temp_rrsi = calculate_rrsi(temp_df,purifier_temp_coef,"Temperature (°F)")
purifier_humid_rrsi = calculate_rrsi(humid_df,purifier_humid_coef,"Humidity (%)")
View(temp_df)
purifier_temp_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"AvgTemp")
purifier_humid_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"AvgHumidity")
purifier_wind_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"AvgWindSpeed")
purifier_pressure_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"AvgPressure")
purifier_fire_scale_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"fireScale")
purifier_socio_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"RPL_THEME1_mean", time_dependent = F)
purifier_house_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"RPL_THEME2_mean", time_dependent = F)
purifier_race_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"RPL_THEME3_mean", time_dependent = F)
purifier_trans_coef = create_coef_for_ci(sample_lst,"air_purifier_smokePM",
"RPL_THEME4_mean", time_dependent = F)
quality_temp_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgTemp")
quality_humid_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgHumidity")
quality_wind_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgWindSpeed")
quality_pressure_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"AvgPressure")
quality_fire_scale_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"fireScale")
quality_socio_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME1_mean", time_dependent = F)
quality_house_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME2_mean", time_dependent = F)
quality_race_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME3_mean", time_dependent = F)
quality_trans_coef = create_coef_for_ci(sample_lst,"air_quality_smokePM",
"RPL_THEME4_mean", time_dependent = F)
filter_temp_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgTemp")
filter_humid_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgHumidity")
filter_wind_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgWindSpeed")
filter_pressure_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"AvgPressure")
filter_fire_scale_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"fireScale")
filter_socio_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME1_mean", time_dependent = F)
filter_house_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME2_mean", time_dependent = F)
filter_race_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME3_mean", time_dependent = F)
filter_trans_coef = create_coef_for_ci(sample_lst,"air_filter_smokePM",
"RPL_THEME4_mean", time_dependent = F)
temp_df = create_data_for_ci("AvgTemp", spatio_tempo_data)
humid_df = create_data_for_ci("AvgHumidity", spatio_tempo_data)
wind_df = create_data_for_ci("AvgWindSpeed", spatio_tempo_data)
pressure_df = create_data_for_ci("AvgPressure", spatio_tempo_data)
fire_scale_df = create_data_for_ci("incident_acres_burned", spatio_tempo_data,
lb = 0.9, ub = 0.99)
socio_df = create_data_for_ci("RPL_THEME1_mean", spatio_tempo_data)
house_df = create_data_for_ci("RPL_THEME2_mean", spatio_tempo_data)
race_df = create_data_for_ci("RPL_THEME3_mean", spatio_tempo_data)
trans_df = create_data_for_ci("RPL_THEME4_mean", spatio_tempo_data)
pollution_temp_rrsi = calculate_rrsi(temp_df,pollution_temp_coef,"Temperature (°F)")
pollution_humid_rrsi = calculate_rrsi(humid_df,pollution_humid_coef,"Humidity (%)")
pollution_wind_rrsi = calculate_rrsi(wind_df,pollution_wind_coef,"Wind Speed (mph)")
pollution_pressure_rrsi = calculate_rrsi(pressure_df,pollution_pressure_coef,
"Atmospheric Pressure (inHg)")
pollution_fire_scale_rrsi = calculate_rrsi(fire_scale_df,pollution_fire_scale_coef,
"Fire Scale (acres)")
pollution_socio_rrsi = calculate_rrsi(socio_df,pollution_socio_coef,
"Socioeconomic Status")
pollution_house_rrsi = calculate_rrsi(house_df,pollution_house_coef,
"Household Characteristics")
pollution_race_rrsi = calculate_rrsi(race_df,pollution_race_coef,
"Racial & Ethnic Minority Status")
pollution_trans_rrsi = calculate_rrsi(trans_df,pollution_trans_coef,
"Housing Type & Transportation")
purifier_temp_rrsi = calculate_rrsi(temp_df,purifier_temp_coef,"Temperature (°F)")
purifier_humid_rrsi = calculate_rrsi(humid_df,purifier_humid_coef,"Humidity (%)")
purifier_wind_rrsi = calculate_rrsi(wind_df,purifier_wind_coef,"Wind Speed (mph)")
purifier_pressure_rrsi = calculate_rrsi(pressure_df,purifier_pressure_coef,
"Atmospheric Pressure (inHg)")
purifier_fire_scale_rrsi = calculate_rrsi(fire_scale_df,purifier_fire_scale_coef,
"Fire Scale (acres)")
purifier_socio_rrsi = calculate_rrsi(socio_df,purifier_socio_coef,
"Socioeconomic Status")
purifier_house_rrsi = calculate_rrsi(house_df,purifier_house_coef,
"Household Characteristics")
purifier_race_rrsi = calculate_rrsi(race_df,purifier_race_coef,
"Racial & Ethnic Minority Status")
purifier_trans_rrsi = calculate_rrsi(trans_df,purifier_trans_coef,
"Housing Type & Transportation")
pollution_rrsi = rbind.data.frame(pollution_temp_rrsi, pollution_humid_rrsi,
pollution_wind_rrsi, pollution_pressure_rrsi,
pollution_fire_scale_rrsi,
pollution_socio_rrsi, pollution_house_rrsi,
pollution_race_rrsi, pollution_trans_rrsi) %>%
mutate(var_name = factor(var_name,
levels = c("Fire Scale (acres)", "Temperature (°F)", "Humidity (%)",
"Wind Speed (mph)",
"Atmospheric Pressure (inHg)",
"Socioeconomic Status",
"Household Characteristics",
"Racial & Ethnic Minority Status",
"Housing Type & Transportation"
)))
purifier_rrsi = rbind.data.frame(purifier_temp_rrsi, purifier_humid_rrsi,
purifier_wind_rrsi, purifier_pressure_rrsi,
purifier_fire_scale_rrsi,
purifier_socio_rrsi, purifier_house_rrsi,
purifier_race_rrsi, purifier_trans_rrsi) %>%
mutate(var_name = factor(var_name,
levels = c("Fire Scale (acres)", "Temperature (°F)", "Humidity (%)",
"Wind Speed (mph)",
"Atmospheric Pressure (inHg)",
"Socioeconomic Status",
"Household Characteristics",
"Racial & Ethnic Minority Status",
"Housing Type & Transportation"
)))
quality_temp_rrsi = calculate_rrsi(temp_df,quality_temp_coef,"Temperature (°F)")
quality_humid_rrsi = calculate_rrsi(humid_df,quality_humid_coef,"Humidity (%)")
quality_wind_rrsi = calculate_rrsi(wind_df,quality_wind_coef,"Wind Speed (mph)")
quality_pressure_rrsi = calculate_rrsi(pressure_df,quality_pressure_coef,
"Atmospheric Pressure (inHg)")
quality_fire_scale_rrsi = calculate_rrsi(fire_scale_df,quality_fire_scale_coef,
"Fire Scale (acres)")
quality_socio_rrsi = calculate_rrsi(socio_df,quality_socio_coef,
"Socioeconomic Status")
quality_house_rrsi = calculate_rrsi(house_df,quality_house_coef,
"Household Characteristics")
quality_race_rrsi = calculate_rrsi(race_df,quality_race_coef,
"Racial & Ethnic Minority Status")
quality_trans_rrsi = calculate_rrsi(trans_df,quality_trans_coef,
"Housing Type & Transportation")
filter_temp_rrsi = calculate_rrsi(temp_df,filter_temp_coef,"Temperature (°F)")
filter_humid_rrsi = calculate_rrsi(humid_df,filter_humid_coef,"Humidity (%)")
filter_wind_rrsi = calculate_rrsi(wind_df,filter_wind_coef,"Wind Speed (mph)")
filter_pressure_rrsi = calculate_rrsi(pressure_df,filter_pressure_coef,
"Atmospheric Pressure (inHg)")
filter_fire_scale_rrsi = calculate_rrsi(fire_scale_df,filter_fire_scale_coef,
"Fire Scale (acres)")
filter_socio_rrsi = calculate_rrsi(socio_df,filter_socio_coef,
"Socioeconomic Status")
filter_house_rrsi = calculate_rrsi(house_df,filter_house_coef,
"Household Characteristics")
filter_race_rrsi = calculate_rrsi(race_df,filter_race_coef,
"Racial & Ethnic Minority Status")
filter_trans_rrsi = calculate_rrsi(trans_df,filter_trans_coef,
"Housing Type & Transportation")
quality_rrsi = rbind.data.frame(quality_temp_rrsi, quality_humid_rrsi,
quality_wind_rrsi, quality_pressure_rrsi,
quality_fire_scale_rrsi,
quality_socio_rrsi, quality_house_rrsi,
quality_race_rrsi, quality_trans_rrsi) %>%
mutate(var_name = factor(var_name,
levels = c("Fire Scale (acres)", "Temperature (°F)", "Humidity (%)",
"Wind Speed (mph)",
"Atmospheric Pressure (inHg)",
"Socioeconomic Status",
"Household Characteristics",
"Racial & Ethnic Minority Status",
"Housing Type & Transportation"
)))
filter_rrsi = rbind.data.frame(filter_temp_rrsi, filter_humid_rrsi,
filter_wind_rrsi, filter_pressure_rrsi,
filter_fire_scale_rrsi,
filter_socio_rrsi, filter_house_rrsi,
filter_race_rrsi, filter_trans_rrsi) %>%
mutate(var_name = factor(var_name,
levels = c("Fire Scale (acres)", "Temperature (°F)", "Humidity (%)",
"Wind Speed (mph)",
"Atmospheric Pressure (inHg)",
"Socioeconomic Status",
"Household Characteristics",
"Racial & Ethnic Minority Status",
"Housing Type & Transportation"
)))
p5 = ggplot(data = pollution_rrsi, aes(x = var_value)) +
geom_line(aes(y = `50%CI`)) +
geom_ribbon(aes(ymin=`2.5%CI`, ymax=`97.5%CI`), linetype=2, alpha=0.1) +
facet_wrap(~ var_name, ncol = 3, scales = "free") +
xlab("") +
ylab("cumulative Relative RSI") +
theme_classic()+
theme(plot.title = element_text(hjust = 0.5),
strip.text = element_text(face = "bold",size=12),
axis.text.y = element_text(size = 12,face = "bold"),
axis.title.y = element_text(size = 12,face = "bold"),
axis.text.x = element_text(size = 12,face = "bold"),
axis.title.x = element_text(size = 12,face = "bold"))
p5
p6 = ggplot(data = purifier_rrsi, aes(x = var_value)) +
geom_line(aes(y = `50%CI`)) +
geom_ribbon(aes(ymin=`2.5%CI`, ymax=`97.5%CI`), linetype=2, alpha=0.1) +
facet_wrap(~ var_name, ncol = 3, scales = "free") +
xlab("") +
ylab("cumulative Relative RSI") +
theme_classic()+
theme(plot.title = element_text(hjust = 0.5),
strip.text = element_text(face = "bold",size=12),
axis.text.y = element_text(size = 12,face = "bold"),
axis.title.y = element_text(size = 12,face = "bold"),
axis.text.x = element_text(size = 12,face = "bold"),
axis.title.x = element_text(size = 12,face = "bold"))
p6
loc_data = spatio_tempo_data %>%
select(week, Metro, AvgTemp, AvgHumidity, AvgWindSpeed, AvgPressure, incident_acres_burned,
smokePM, RPL_THEME1_mean, RPL_THEME2_mean, RPL_THEME3_mean,
RPL_THEME4_mean) %>%
group_by(Metro) %>%
summarise(AvgTemp = mean(AvgTemp,na.rm = T),
AvgHumidity = mean(AvgHumidity,na.rm = T),
AvgWindSpeed = mean(AvgWindSpeed,na.rm = T),
AvgPressure = mean(AvgPressure,na.rm = T),
incident_acres_burned = mean(incident_acres_burned,na.rm = T),
smokePM = mean(smokePM,na.rm = T),
RPL_THEME1_mean = mean(RPL_THEME1_mean,na.rm = T),
RPL_THEME2_mean = mean(RPL_THEME2_mean,na.rm = T),
RPL_THEME3_mean = mean(RPL_THEME3_mean,na.rm = T),
RPL_THEME4_mean = mean(RPL_THEME4_mean,na.rm = T)
) %>%
mutate(AvgTemp_scale = (AvgTemp - mean(spatio_tempo_data$AvgTemp,na.rm = T))/sd(spatio_tempo_data$AvgTemp,na.rm = T),
AvgTemp_scale_lag1 = AvgTemp_scale,
AvgTemp_scale_lag2 = AvgTemp_scale,
AvgTemp_scale_lag3 = AvgTemp_scale,
AvgHumidity_scale = (AvgHumidity - mean(spatio_tempo_data$AvgHumidity,na.rm = T))/sd(spatio_tempo_data$AvgHumidity,na.rm = T),
AvgHumidity_scale_lag1 = AvgHumidity_scale,
AvgHumidity_scale_lag2 = AvgHumidity_scale,
AvgHumidity_scale_lag3 = AvgHumidity_scale,
AvgWindSpeed_scale = (AvgWindSpeed - mean(spatio_tempo_data$AvgWindSpeed,na.rm = T))/sd(spatio_tempo_data$AvgWindSpeed,na.rm = T),
AvgWindSpeed_scale_lag1 = AvgWindSpeed_scale,
AvgWindSpeed_scale_lag2 = AvgWindSpeed_scale,
AvgWindSpeed_scale_lag3 = AvgWindSpeed_scale,
AvgPressure_scale = (AvgPressure - mean(spatio_tempo_data$AvgPressure,na.rm = T))/sd(spatio_tempo_data$AvgPressure,na.rm = T),
AvgPressure_scale_lag1 = AvgPressure_scale,
AvgPressure_scale_lag2 = AvgPressure_scale,
AvgPressure_scale_lag3 = AvgPressure_scale,
incident_acres_burned_scale = (incident_acres_burned - mean(spatio_tempo_data$incident_acres_burned,na.rm = T))/sd(spatio_tempo_data$incident_acres_burned,na.rm = T),
incident_acres_burned_scale_lag1 = incident_acres_burned_scale,
incident_acres_burned_scale_lag2 = incident_acres_burned_scale,
incident_acres_burned_scale_lag3 = incident_acres_burned_scale,
smokePM_scale = (smokePM - mean(spatio_tempo_data$smokePM,na.rm = T))/sd(spatio_tempo_data$smokePM,na.rm = T),
smokePM_scale_lag1 = smokePM_scale,
smokePM_scale_lag2 = smokePM_scale,
smokePM_scale_lag3 = smokePM_scale,
RPL_THEME1_mean_scale = (RPL_THEME1_mean - mean(spatio_tempo_data$RPL_THEME1_mean,na.rm = T))/sd(spatio_tempo_data$RPL_THEME1_mean,na.rm = T),
RPL_THEME1_mean_scale_lag1 = RPL_THEME1_mean_scale,
RPL_THEME1_mean_scale_lag2 = RPL_THEME1_mean_scale,
RPL_THEME1_mean_scale_lag3 = RPL_THEME1_mean_scale,
RPL_THEME2_mean_scale = (RPL_THEME2_mean - mean(spatio_tempo_data$RPL_THEME2_mean,na.rm = T))/sd(spatio_tempo_data$RPL_THEME2_mean,na.rm = T),
RPL_THEME2_mean_scale_lag1 = RPL_THEME2_mean_scale,
RPL_THEME2_mean_scale_lag2 = RPL_THEME2_mean_scale,
RPL_THEME2_mean_scale_lag3 = RPL_THEME2_mean_scale,
RPL_THEME3_mean_scale = (RPL_THEME3_mean - mean(spatio_tempo_data$RPL_THEME3_mean,na.rm = T))/sd(spatio_tempo_data$RPL_THEME3_mean,na.rm = T),
RPL_THEME3_mean_scale_lag1 = RPL_THEME3_mean_scale,
RPL_THEME3_mean_scale_lag2 = RPL_THEME3_mean_scale,
RPL_THEME3_mean_scale_lag3 = RPL_THEME3_mean_scale,
RPL_THEME4_mean_scale = (RPL_THEME4_mean - mean(spatio_tempo_data$RPL_THEME4_mean,na.rm = T))/sd(spatio_tempo_data$RPL_THEME4_mean,na.rm = T),
RPL_THEME4_mean_scale_lag1 = RPL_THEME4_mean_scale,
RPL_THEME4_mean_scale_lag2 = RPL_THEME4_mean_scale,
RPL_THEME4_mean_scale_lag3 = RPL_THEME4_mean_scale,
) %>%
rename(
`smokePM:AvgTemp:1` = AvgTemp_scale,
`smokePM_lag1:AvgTemp_lag1:1` = AvgTemp_scale_lag1,
`smokePM_lag2:AvgTemp_lag2:1` = AvgTemp_scale_lag2,
`smokePM_lag3:AvgTemp_lag3:1` = AvgTemp_scale_lag3,
`smokePM:AvgHumidity:1` = AvgHumidity_scale,
`smokePM_lag1:AvgHumidity_lag1:1` = AvgHumidity_scale_lag1,
`smokePM_lag2:AvgHumidity_lag2:1` = AvgHumidity_scale_lag2,
`smokePM_lag3:AvgHumidity_lag3:1` = AvgHumidity_scale_lag3,
`smokePM:AvgWindSpeed:1` = AvgWindSpeed_scale,
`smokePM_lag1:AvgWindSpeed_lag1:1` = AvgWindSpeed_scale_lag1,
`smokePM_lag2:AvgWindSpeed_lag2:1` = AvgWindSpeed_scale_lag2,
`smokePM_lag3:AvgWindSpeed_lag3:1` = AvgWindSpeed_scale_lag3,
`smokePM:AvgPressure:1` = AvgPressure_scale,
`smokePM_lag1:AvgPressure_lag1:1` = AvgPressure_scale_lag1,
`smokePM_lag2:AvgPressure_lag2:1` = AvgPressure_scale_lag2,
`smokePM_lag3:AvgPressure_lag3:1` = AvgPressure_scale_lag3,
`smokePM:fireScale:1` = incident_acres_burned_scale,
`smokePM_lag1:fireScale_lag1:1` = incident_acres_burned_scale_lag1,
`smokePM_lag2:fireScale_lag2:1` = incident_acres_burned_scale_lag2,
`smokePM_lag3:fireScale_lag3:1` = incident_acres_burned_scale_lag3,
`smokePM:RPL_THEME1_mean:1` = RPL_THEME1_mean_scale,
`smokePM_lag1:RPL_THEME1_mean:1` = RPL_THEME1_mean_scale_lag1,
`smokePM_lag2:RPL_THEME1_mean:1` = RPL_THEME1_mean_scale_lag2,
`smokePM_lag3:RPL_THEME1_mean:1` = RPL_THEME1_mean_scale_lag3,
`smokePM:RPL_THEME2_mean:1` = RPL_THEME2_mean_scale,
`smokePM_lag1:RPL_THEME2_mean:1` = RPL_THEME2_mean_scale_lag1,
`smokePM_lag2:RPL_THEME2_mean:1` = RPL_THEME2_mean_scale_lag2,
`smokePM_lag3:RPL_THEME2_mean:1` = RPL_THEME2_mean_scale_lag3,
`smokePM:RPL_THEME3_mean:1` = RPL_THEME3_mean_scale,
`smokePM_lag1:RPL_THEME3_mean:1` = RPL_THEME3_mean_scale_lag1,
`smokePM_lag2:RPL_THEME3_mean:1` = RPL_THEME3_mean_scale_lag2,
`smokePM_lag3:RPL_THEME3_mean:1` = RPL_THEME3_mean_scale_lag3,
`smokePM:RPL_THEME4_mean:1` = RPL_THEME4_mean_scale,
`smokePM_lag1:RPL_THEME4_mean:1` = RPL_THEME4_mean_scale_lag1,
`smokePM_lag2:RPL_THEME4_mean:1` = RPL_THEME4_mean_scale_lag2,
`smokePM_lag3:RPL_THEME4_mean:1` = RPL_THEME4_mean_scale_lag3
)
pollution_rrsi = data.matrix(loc_data[,interact_name]) %*% data.matrix(sample_lst$air_pollution_smokePM[interact_name,])
rownames(pollution_rrsi) = loc_data$Metro
interact_name = rownames(sample_lst$air_pollution_smokePM)[1:40]
pollution_rrsi = data.matrix(loc_data[,interact_name]) %*% data.matrix(sample_lst$air_pollution_smokePM[interact_name,])
loc_data$`smokePM:1` = 1.0
loc_data$`smokePM_lag1:1` = 1.0
loc_data$`smokePM_lag2:1` = 1.0
loc_data$`smokePM_lag3:1` = 1.0
interact_name = rownames(sample_lst$air_pollution_smokePM)[1:40]
pollution_rrsi = data.matrix(loc_data[,interact_name]) %*% data.matrix(sample_lst$air_pollution_smokePM[interact_name,])
rownames(pollution_rrsi) = loc_data$Metro
pollution_rrsi_mean = exp(apply(
pollution_rrsi,
1,
mean
))
pollution_rrsi_df = data.frame(DMA = names(pollution_rrsi_mean),
RRSI = pollution_rrsi_mean, row.names = NULL)
pollution_rrsi_df$DMA = gsub(",", "", pollution_rrsi_df$DMA)
pollution_rrsi_df$DMA = gsub("-", " ", pollution_rrsi_df$DMA)
pollution_rrsi_map = dma_map %>%
inner_join(pollution_rrsi_df, by = "DMA")
pollution_rrsi_map$Search = "Air pollution"
quality_rrsi = data.matrix(loc_data[,interact_name]) %*% data.matrix(sample_lst$air_quality_smokePM[interact_name,])
rownames(quality_rrsi) = loc_data$Metro
quality_rrsi_mean = exp(apply(
quality_rrsi,
1,
mean
))
quality_rrsi_df = data.frame(DMA = names(quality_rrsi_mean),
RRSI = quality_rrsi_mean, row.names = NULL)
quality_rrsi_df$DMA = gsub(",", "", quality_rrsi_df$DMA)
quality_rrsi_df$DMA = gsub("-", " ", quality_rrsi_df$DMA)
quality_rrsi_map = dma_map %>%
inner_join(quality_rrsi_df, by = "DMA")
quality_rrsi_map$Search = "Air quality"
purifier_rrsi = data.matrix(loc_data[,interact_name]) %*% data.matrix(sample_lst$air_purifier_smokePM[interact_name,])
rownames(purifier_rrsi) = loc_data$Metro
purifier_rrsi_mean = exp(apply(
purifier_rrsi,
1,
mean
))
purifier_rrsi_df = data.frame(DMA = names(purifier_rrsi_mean),
RRSI = purifier_rrsi_mean, row.names = NULL)
purifier_rrsi_df$DMA = gsub(",", "", purifier_rrsi_df$DMA)
purifier_rrsi_df$DMA = gsub("-", " ", purifier_rrsi_df$DMA)
purifier_rrsi_map = dma_map %>%
inner_join(purifier_rrsi_df, by = "DMA")
purifier_rrsi_map$Search = "Air purifier"
filter_rrsi = data.matrix(loc_data[,interact_name]) %*% data.matrix(sample_lst$air_filter_smokePM[interact_name,])
rownames(filter_rrsi) = loc_data$Metro
filter_rrsi_mean = exp(apply(
filter_rrsi,
1,
mean
))
filter_rrsi_df = data.frame(DMA = names(filter_rrsi_mean),
RRSI = filter_rrsi_mean, row.names = NULL)
filter_rrsi_df$DMA = gsub(",", "", filter_rrsi_df$DMA)
filter_rrsi_df$DMA = gsub("-", " ", filter_rrsi_df$DMA)
filter_rrsi_map = dma_map %>%
inner_join(filter_rrsi_df, by = "DMA")
filter_rrsi_map$Search = "Air filter"
rrsi_map = rbind(pollution_rrsi_map, purifier_rrsi_map)
rrsi_map_appendix = rbind(quality_rrsi_map, filter_rrsi_map)
p7 = ggplot(data = rrsi_map) +
geom_sf(aes(fill = RRSI)) +
scale_fill_viridis_c() +
facet_wrap(~ Search, ncol = 2) +
theme_minimal() +
theme_void() +
theme(legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold",size=10),
strip.text = element_text(face="bold",size=10))
p7
appendix_p2 = ggplot(data = rrsi_map_appendix) +
geom_sf(aes(fill = RRSI)) +
scale_fill_viridis_c() +
facet_wrap(~ Search, ncol = 2) +
theme_minimal() +
theme_void() +
theme(legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold",size=10),
strip.text = element_text(face="bold",size=10))
